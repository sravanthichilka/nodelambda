const Joi = require('@hapi/joi');

const only_string: any = /^[a-zA-Z0-9]+$/;
const url:any = /(^|\s)((https?:\/\/)?([\w-]+(\.[\w-]+)+\.?(:\d+)?(\/\S*)?))|((http:\/\/)?(localhost(:?)([0-9]{2,})?))/;

export default {
  String: Joi.string().required(),
  Username: Joi.string().regex(only_string).required(),
  Email: Joi.string().email().required(),
  Password: Joi.string().required(),
  ConfirmPassword: Joi.string().valid(Joi.ref('Password')).required(),
  FirstName: Joi.string().required(),
  MiddleName: Joi.string().allow(null,''),
  LastName: Joi.string().required(),
  Gender: Joi.string().valid('Male', 'Female').required(),
  DateOfBirth: Joi.string().required(),
  HomeNumber: Joi.string().min(10).max(14).required(),
  PhoneNumber: Joi.string().min(10).max(14).required(),
  ParentPhoneNumber: Joi.string().allow(null,'').min(10).max(14),
  Address: Joi.string().required(),
  Address2: Joi.string().allow(null,''),
  City: Joi.string().required(),
  State: Joi.string().required(),
  ZipCode: Joi.string().max(5).required(),
  Latitude:Joi.string().required(),
  Longitude:Joi.string().required(),
  CardType: Joi.string().valid('Visa', 'MasterCard', 'Amex', 'Diners').required(),
  UserType: Joi.string().valid('Teen','Adult','CO').required(),
  ContractSignature: Joi.string().required(),
  Boolean: Joi.boolean().required(),
  HasPrivatePickup: Joi.valid(0, 1).required(),
  PickupType: Joi.valid('None', 'Deduct', 'Valet').required(),

  Id: Joi.number().positive().required(),
  ShippingId: Joi.number().positive().allow(null,''),
  Token: Joi.string().required(),
  URI: Joi.string().regex(url).message('Invalid url format').required(),
  HighSchool:  Joi.string().required(),
  EmergencyName: Joi.string().required(),
  EmergencyPhone: Joi.string().required(),
  EmergencyRelationship: Joi.string().required(),
  HowDidYouHear:Joi.number().required(),
  WhyDidYouChoose: Joi.number().required(),
  LicenseOrPermitNumber:Joi.string().required(),
  CourseMandatedByEmployer:Joi.boolean().required(),
  MobilePhone:Joi.string().required(),
  ParentFirstName:Joi.string().required(),
  ParentLastName:Joi.string().required(),
  ParentEmail:Joi.string().email().required(),
  ParentEmail2:Joi.string().email().allow(null,''),
  ParentMobilePhone:Joi.string().required(),
  AddressID:Joi.number().required(),
  SameAsAccountAddress:Joi.boolean().required(),

  // Alerts related..
  AlertParentEmail: Joi.string().email().allow(null,''),
  AlertParentEmail2: Joi.string().email().allow(null,''),
  AlertParentPhone: Joi.string().allow(null,'').min(10).max(14),
  AlertParentPhone2: Joi.string().allow(null,'').min(10).max(14),
  PageNumber: Joi.number().required(),
  Offset: Joi.number().required(),

  //Product related..
  Price: Joi.number().required(),
  ProductType: Joi.string().valid('Fee', 'Shipping Fee', 'AddOn','Package','Deadline Extension').required(),
  ProductStatus: Joi.string().valid(0,1,2).required(),
  ProductURI: Joi.string().allow(null,'').regex(url).message('Invalid url format'),
  RequireShipping: Joi.valid(0, 1).required(),
  ShippingFeeID: Joi.number().positive(),
  PackageType: Joi.string().required(),
  Drives: Joi.number().positive().required(),
  DriveHours: Joi.number().positive().required(),
  Classes: Joi.number().positive().required(),
  ClassRoomHours: Joi.number().positive().required(),
  RoadTestDrives: Joi.number().positive().allow(null,''),
  RoadTestDriveHours: Joi.number().positive().allow(null,''),
  Valets: Joi.string().allow(null,''),
  IsOnlineCourse: Joi.valid(0, 1),
  OnlineCourseType: Joi.string().allow('Asentia'),
  OnlineContentID: Joi.string(),
  PrivatePickupID:Joi.number().positive().allow(null,''),
  RevenuePerDrive:Joi.string().allow(null,''),
  RevenuePerClass:Joi.string().allow(null,''),
  RevenuePerProgress:Joi.string().allow(null,''),
  DeadlineClass:Joi.string().allow(null,''),
  DeadlineClassDays:Joi.number().allow(null,''),
  DeadlineDrive:Joi.string().allow(null,''),
  DeadlineDriveDays:Joi.number().allow(null,''),
  TeenObservations:Joi.string().allow(null,''),
  VIPStatus:Joi.number().positive().allow(null,''),
  VIPLevel:Joi.number().positive().allow(null,''),
  FileName:Joi.string().allow(null,''),

  // tracks related schemas
  Name: Joi.string().required(),
  ShortName: Joi.string(),
  TrackNo: Joi.number(),
  DriverType: Joi.string().valid('Teen','Adult','CO'),
  // Status
  ScoringMethod: Joi.string().valid('Normal','Pass/Fail','Checkpoint','Test'),
  EvaluationItems: Joi.array().items(Joi.object({
    ItemText: Joi.string()
  })),
  TestItems: Joi.array().items(Joi.object({
    ItemText: Joi.string(),
    Value: Joi.number()
  })),
  trackId: Joi.number().required(),

  
  Note: Joi.string().required(),
  NoteID: Joi.number().required(),
  Image: Joi.string().required(),
  ZoneID: Joi.number().required(),
  HasInCarTraining: Joi.boolean().required(),
  HasOnlineCourse: Joi.boolean().required(),
  Status: Joi.valid(0, 1).required(),
  TDLRDDCCode: Joi.string().required(),
  TDLRLocationCode: Joi.string().required(),
  TDLRLicenseExpiration: Joi.date().required(),
  Nickname: Joi.string().required(),
  IsSalary:Joi.boolean().required(),
  LocationID:Joi.number().required(),
  HomePhone:Joi.string().required(),

};
